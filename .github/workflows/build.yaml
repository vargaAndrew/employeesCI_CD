name: Build

#ide kell felsorolni az eventeket
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:
    
jobs:
  build:
  #ez gyakorlatilag egy docker image 
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}

    #steppek, amik a containerben lefutnak
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
          #cache beallitas
          cache: 'maven' #mavent irod, akkor tudja melyiknek kell a cahcba berakni
      - name: Set version
        id: set_version
        run: |
          VERSION="1.0.0-${GITHUB_RUN_NUMBER}"
          echo "Version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Build with Maven
        run: ./mvnw -B package -Dbuild.number=$VERSION # -B: batch mode, hogy ne kÃ©rdezzen semmit
        #az eloallitott jart le kell tarolnunk az artifactba
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: employees-jar
          path: target/employees-*.jar #az * helyere jon a verzioszam

  integration-tests:
    #ha true-ra van allitva akkor lefut, ha false-ra akkor nem
    if: false
    runs-on: ubuntu-latest
    needs: build #ez a job csak akkor fut le, ha a build sikeres volt
    env:
      SPRING_DATASOURCE_URL: jdbc:mariadb://localhost:3306/employees
      SPRING_DATASOURCE_USERNAME: employees
      SPRING_DATASOURCE_PASSWORD: employees
    services:
      maria-db:
        image: mariadb:12.1.1-rc
        env:
          MARIADB_DATABASE: employees
          MARIADB_USER: employees
          MARIADB_PASSWORD: employees
          MARIADB_ROOT_PASSWORD: employees
        ports:
          - 3306:3306 #kihozza a kontener portjat a hostra
        options: >- #ayt jelenti hogy vonja ossze a sorokat a desh - az pedig hogy az ures sorokat ignoralja
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - run: echo "Run integration tests"
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
          #cache beallitas
          cache: 'maven' #mavent irod, akkor tudja melyiknek kell a cahcba berakni
      - name: Build with Maven
        run: ./mvnw -B verify
      
  build-image:
    runs-on: ubuntu-latest
    needs: build #ez a job csak akkor fut le, ha a build sikeres volt
    permissions:
      contents: read #read permission kell a checkout-hoz
      packages: write #write permission hogy tudjak irni a container registry-be
    steps:
      - run: echo "Build Docker images"
      #toltsuk le az artifactba feltoltott jar-t
  
      #ez letolti a kodot a repobol
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: employees-jar
          #target konyvtarba tolti le
          path: target/
      - name: Read version from build job
        run: |
          VERSION=${{ needs.build.outputs.version }}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version from build job: $VERSION"    
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          #github actor a github felhasznalonev
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.layers
          push: true
          #ez lesz a docker image (ez docker tag nem a github tag) neve lesz
          tags: ghcr.io/vargaandrew/employeesci_cd:latest, ghcr.io/vargaandrew/employeesci_cd:${{ env.VERSION }}
      
  deploy:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - run: echo "Deploy application here"   
